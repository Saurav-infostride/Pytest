{"name": "test_verifyLoginCustomer[chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_CustomerLogin.Test_CustomerLogin object at 0x000002187E907820>\n\n    def test_verifyLoginCustomer(self):\n        managerLog = ManagerLogin(self.driver)\n>       managerLog.managerLoginOption()\n\nTests\\test_CustomerLogin.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\ManagerLogin.py:15: in managerLoginOption\n    self.do_click(Locators.BANK_MANAGER_LOGIN)\nPages\\BasePage.py:14: in do_click\n    WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located(by_locator)).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9d16fd69879d5af122a49370a793614f\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000002187E9B3C10>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "7ff40fd3-d13a-491f-9b05-b1fcf476c7ac-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "e1ccdce1-9828-42e4-81e6-5d31671a3a02-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "init_driver", "value": "'chrome'"}], "start": 1653917429334, "stop": 1653917448482, "uuid": "92f0d5e9-457d-48df-94b0-e95826e58e02", "historyId": "69b1ae899fce803ddd9c0a675580ca4f", "testCaseId": "5bd78a82c53db39bd87c91538cce0b74", "fullName": "Tests.test_CustomerLogin.Test_CustomerLogin#test_verifyLoginCustomer", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_CustomerLogin"}, {"name": "subSuite", "value": "Test_CustomerLogin"}, {"name": "host", "value": "MSDT120"}, {"name": "thread", "value": "14472-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_CustomerLogin"}]}